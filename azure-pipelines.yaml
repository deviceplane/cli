trigger:
  tags:
    include:
    - v*
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    - CHANGELOG.md

variables:
  jobuuid: $(Build.BuildId)$(Agent.Id)
  build: $(Build.BuildId)
  ref: $(Build.SourceBranch)
  commit: $(Build.SourceVersion)
  branch: $(Build.SourceBranchName)
  isTaggedCommit: 'no'
  version:
  GOROOT: '/usr/local/go1.16'
  GOPATH: '/tmp/go'
  GOBIN:  '$(GOPATH)/bin'
  dp.agent.version: "1.18.0"

stages:
- stage: Publish
  jobs:
  - job: Publish
    pool:
      vmImage: 'Ubuntu-18.04'
  
    steps:
    - script: |
        set -e
        VERS=$(echo $(commit) | cut -c1-20)
        if [[ $(ref) == refs/tags* ]]; then
          VERS=$(echo $(ref) | sed "s|refs/tags/v||g")
          echo "##vso[task.setvariable variable=isTaggedCommit]yes"
        fi
        echo "##vso[task.setvariable variable=version]$VERS"
        echo "Version: $VERS"
      displayName: 'Set git/version variables'
  
    - script: |
        set -e
        mkdir -p '$(GOBIN)'
        mkdir -p '$(GOPATH)/pkg'
        echo '##vso[task.prependpath]$(GOBIN)'
        echo '##vso[task.prependpath]$(GOROOT)/bin'
      displayName: 'Set up the Go workspace'
    - task: GoTool@0
      inputs:
        version: '1.16'
        goPath: $(GOPATH)
        goBin: $(GOBIN)
      displayName: 'Install Golang'
  
    - script: |
        set -e
        CLI_VERSION="$(version)" script/build.bash
        dist/cli/$(version)/linux/amd64/deviceplane --help
      displayName: 'Build binaries'
  
    - task: AzureCLI@2
      displayName: 'Upload versioned binary'
      inputs:
        azureSubscription: AzureSubscription
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          set -e
          az storage blob upload-batch -d downloads/cli -s ./dist/cli/ --account-name deviceplanedownloads --account-key $(az.storage_account_key)
  
    - task: AzureCLI@2
      condition: eq(variables.isTaggedCommit, 'yes')
      displayName: 'Upload latest binary'
      inputs:
        azureSubscription: AzureSubscription
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          set -e
          az storage blob upload-batch -d downloads/cli/latest -s ./dist/cli/$(version)/ --account-name deviceplanedownloads --account-key $(az.storage_account_key)
  
- stage: Test
  jobs:
  - job: Test
    pool:
      vmImage: 'Ubuntu-18.04'
  
    steps:
    - checkout: self
      submodules: true

    - script: |
        set -e
        VERS=$(echo $(commit) | cut -c1-20)
        if [[ $(ref) == refs/tags* ]]; then
          VERS=$(echo $(ref) | sed "s|refs/tags/v||g")
        fi
        echo "##vso[task.setvariable variable=version]$VERS"
        echo "Version: $VERS"
      displayName: 'Set git/version variables'
  
    - bash: |
        set -e
        ./bootstrap.bash
      displayName: 'Bootstrap'
      workingDirectory: $(System.DefaultWorkingDirectory)/tests

    - bash: |
        set -e
        cp ./env.sh ./conf/env.sh
        sed -i "s|TT_CLI_VERSION=.*|TT_CLI_VERSION=\"$(version)\"|g" ./conf/env.sh
        ./run.bash install_cli 
      displayName: 'Test: install cli'
      workingDirectory: $(System.DefaultWorkingDirectory)/tests
  
    - bash: |
        set -e
        cp ./env.sh ./conf/env.sh
        sed -i "s|TT_AGENT_VERSION=.*|TT_AGENT_VERSION=\"$(dp.agent.version)\"|g" ./conf/env.sh
        sed -i "s|TT_REGISTRATION_TOKEN=.*|TT_REGISTRATION_TOKEN=\"$(agent.registration_token)\"|g" ./conf/env.sh
        sed -i "s|TT_PROJECT=.*|TT_PROJECT=\"$(project)\"|g" ./conf/env.sh
        ./run.bash install_agent 
      displayName: 'Test: install agent'
      workingDirectory: $(System.DefaultWorkingDirectory)/tests
  
    - bash: |
        set -e
        cp ./env.sh ./conf/env.sh
        sed -i "s|TT_PROJECT=.*|TT_PROJECT=\"$(project)\"|g" ./conf/env.sh
        sed -i "s|TT_ACCESS_KEY=.*|TT_ACCESS_KEY=\"$(cli.access_key)\"|g" ./conf/env.sh
        ./run.bash ssh 
      displayName: 'Test: ssh'
      workingDirectory: $(System.DefaultWorkingDirectory)/tests
  